{"version":3,"sources":["components/ui/Containers.js","store/const.js","pages/Board.js","store/actions/user.js","pages/Auth.js","pages/About.js","pages/NotFound.js","history.js","App.js","store/reducers/board.js","store/reducers/user.js","store/index.js","serviceWorker.js","index.js"],"names":["ContainerFlex","styled","div","_templateObject","_ref","_ref$justify","justify","_ref2","_ref2$align","align","_ref3","_ref3$column","column","_ref4","_ref4$padding","padding","_ref5","width","concat","_ref6","_ref6$height","height","BoardComponent","_templateObject2","Column","_templateObject3","_ref7","_ref7$center","center","SET_AUTH_TOKEN","INC","Board","state","columns","c","board","React","createRef","onAddColumn","_this","setState","Object","toConsumableArray","current","scroll","nextProps","nextState","console","log","this","length","authToken","props","_this$state","load","react_default","a","createElement","ref","map","_","i","key","Button","onClick","react_router","to","Component","connect","_ref2$user","user","inc","type","Auth","error","email","password","repeatPass","onChangeInput","target","defineProperty","value","onRegister","setAuthToken","onLogin","history","push","match","params","content","Input","placeholder","onChange","Fragment","react_router_dom","arguments","undefined","About","NotFound","createBrowserHistory","App","exact","path","component","init","boardSlugs","userName","rootReducer","action","objectSpread","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","apply","Boolean","window","location","hostname","ReactDOM","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aad91ddf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContainerFlex = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: ${({ justify = \"center\" }) => justify};\r\n  align-items: ${({ align = \"center\" }) => align};\r\n  flex-direction: ${({ column = false }) => (column ? \"column\" : \"row\")};\r\n  padding: ${({ padding = 0 }) => padding};\r\n  ${({ width }) => (width ? `width: ${width};` : \"\")}\r\n  ${({ height = null }) => (height ? `height: ${height};` : \"\")}\r\n`;\r\n\r\nexport const BoardComponent = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n\r\n  box-shadow: 0 0 10px 5px black;\r\n  width: 95%;\r\n  height: 80vh;\r\n  overflow-y: hidden;\r\n  overflow-x: scroll;\r\n\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Column = styled.div`\r\n  display: flex;\r\n  justify-content: ${({ center = false }) => {\r\n    return center ? \"center\" : \"flex-start\";\r\n  }};\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  min-width: 15vw;\r\n  @media (max-width: 768px) {\r\n    min-width: 200px;\r\n  }\r\n`;\r\n","export const SET_AUTH_TOKEN = \"SET_AUTH_TOKEN\";\r\nexport const INC = \"INC\";\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Card } from \"@material-ui/core\";\r\nimport { BoardComponent, Column } from \"../components/ui/Containers\";\r\n\r\nimport { inc } from \"../store/actions/user\";\r\n\r\nclass Board extends React.Component {\r\n  state = {\r\n    columns: [],\r\n    c: 0\r\n  };\r\n\r\n  board = React.createRef();\r\n\r\n  onAddColumn = () => {\r\n    this.setState(\r\n      ({ columns, c }) => ({ columns: [...columns] }),\r\n      () => {\r\n        if (this.board.current) {\r\n          this.board.current.scroll(10000000000, 0);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    console.log(\r\n      nextState.columns,\r\n      this.state.columns,\r\n      this.state.columns == nextState.columns\r\n    );\r\n    return nextState.columns.length !== this.state.columns.length;\r\n  }\r\n\r\n  render() {\r\n    const { authToken } = this.props;\r\n    const { columns, load } = this.state;\r\n    console.log(13);\r\n    if (authToken) {\r\n      return (\r\n        <BoardComponent ref={this.board}>\r\n          {columns.map((_, i) => {\r\n            return <Column key={i} />;\r\n          })}\r\n          <Column center>\r\n            <Button onClick={this.onAddColumn}>Add Column</Button>\r\n            {load ? \"...\" : \"\"}\r\n          </Column>\r\n        </BoardComponent>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/auth\" />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ user: { authToken, c } }) => ({\r\n  authToken,\r\n  c\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { inc }\r\n)(Board);\r\n","import { SET_AUTH_TOKEN, INC } from \"../const\";\r\n\r\nexport function setAuthToken(authToken = true) {\r\n  return {\r\n    type: SET_AUTH_TOKEN,\r\n    authToken\r\n  };\r\n}\r\n\r\nexport function inc() {\r\n  return {\r\n    type: INC\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Input, Button } from \"@material-ui/core\";\r\nimport { setAuthToken } from \"../store/actions/user\";\r\nimport { ContainerFlex } from \"../components/ui/Containers\";\r\n\r\nclass Auth extends React.Component {\r\n  state = {\r\n    error: false,\r\n\r\n    email: \"\",\r\n    password: \"\",\r\n    repeatPass: \"\"\r\n  };\r\n\r\n  onChangeInput = key => ({ target }) => {\r\n    this.setState({ [key]: target.value });\r\n  };\r\n\r\n  onRegister = () => {\r\n    this.setState(({ password, repeatPass }) => {\r\n      const error = !password || password !== repeatPass;\r\n      if (error) {\r\n        return {\r\n          error\r\n        };\r\n      } else {\r\n        this.props.setAuthToken();\r\n      }\r\n    });\r\n  };\r\n\r\n  onLogin = () => {\r\n    // if (this.state.password && this.state.email) {\r\n    this.props.setAuthToken();\r\n    this.props.history.push(\"/\");\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      match: {\r\n        params: { type }\r\n      }\r\n    } = this.props;\r\n\r\n    const { error } = this.state;\r\n    let content = null;\r\n    if (type === \"sign-up\") {\r\n      content = (\r\n        <ContainerFlex column height=\"50vh\" justify=\"space-around\">\r\n          <Input\r\n            placeholder=\"email\"\r\n            type=\"email\"\r\n            onChange={this.onChangeInput(\"email\")}\r\n          />\r\n          <Input\r\n            error={error}\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            onChange={this.onChangeInput(\"password\")}\r\n          />\r\n          <Input\r\n            error={error}\r\n            placeholder=\"repeat password\"\r\n            type=\"password\"\r\n            onChange={this.onChangeInput(\"repeatPass\")}\r\n          />\r\n\r\n          <Button onClick={this.onRegister}>Register</Button>\r\n        </ContainerFlex>\r\n      );\r\n    } else {\r\n      content = (\r\n        <ContainerFlex column height=\"50vh\" justify=\"space-around\">\r\n          <Input\r\n            placeholder=\"email\"\r\n            type=\"email\"\r\n            onChange={this.onChangeInput(\"email\")}\r\n          />\r\n          <Input\r\n            error={error}\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            onChange={this.onChangeInput(\"password\")}\r\n          />\r\n          <Button onClick={this.onLogin}>Login</Button>\r\n        </ContainerFlex>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ContainerFlex height=\"10vh\" justify=\"flex-end\" padding=\"0 50px\">\r\n          <Link to={type === \"sign-up\" ? \"/auth\" : \"/auth/sign-up\"}>\r\n            {type === \"sign-up\" ? \"go to Auth\" : \"go to Sign-up\"}\r\n          </Link>\r\n        </ContainerFlex>\r\n        <ContainerFlex height=\"90vh\">\r\n          <form>{content}</form>\r\n        </ContainerFlex>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    setAuthToken\r\n  }\r\n)(Auth);\r\n","import React from \"react\";\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nclass NotFound extends React.Component {\r\n  render() {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./app.scss\";\n\nimport Board from \"./pages/Board\";\nimport Auth from \"./pages/Auth\";\nimport About from \"./pages/About\";\nimport NotFound from \"./pages/NotFound\";\nimport history from \"./history\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter history={history}>\n        <Switch>\n          <Route exact path=\"/\" component={Board} />\n          <Route path=\"/auth/:type?\" component={Auth} />\n          <Route path=\"/about\" component={About} />\n          <Route component={NotFound} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n","const init = {\r\n  boardSlugs: []\r\n};\r\n\r\nexport function board(state = init, action) {\r\n  return state;\r\n}\r\n","import { SET_AUTH_TOKEN, INC } from \"../const\";\r\n\r\nconst init = {\r\n  userName: \"\",\r\n  authToken: true,\r\n  c: 0\r\n};\r\n\r\nexport function user(state = init, action) {\r\n  if (action.type === SET_AUTH_TOKEN) {\r\n    return {\r\n      ...state,\r\n      authToken: action.authToken\r\n    };\r\n  } else if (action.type === INC) {\r\n    return {\r\n      ...state,\r\n      c: state.c + 1\r\n    };\r\n  }\r\n  return state;\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n// dev\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n// reducers\r\nimport { board } from \"./reducers/board\";\r\nimport { user } from \"./reducers/user\";\r\n\r\nconst rootReducer = { board, user };\r\nconst middlewares = [];\r\n\r\nexport const store = createStore(\r\n  combineReducers(rootReducer),\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}